
#===================================================================
# SAMPLEVIZ 0.1
# 
# vizualizer of sample patterns generated by SAMPLEGEN tool
#
# license is at the end of this file.
#
# TODO
# controls (zooming ...)
# 3d visualization
#===================================================================


import samplegen as spg
import math
import pygame



def samplepoint2_draw(screen, s, pos, scale, wsize):
	pygame.draw.circle(
		screen,
		(190, 200, min(max(int(100 * s[1]), 0), 255)), spg.vec2_int(spg.vec2_add(spg.vec2_mul_f(s[0], scale), spg.vec2_mul(pos, wsize))),
		s[1] * scale * 0.02)

def samplepoint2_arr_draw(samples):
	background_colour = (15, 15, 20)
	wsize = (800, 700)
	wcenter = (int(wsize[0] / 2), int(wsize[1] / 2))
	screen = pygame.display.set_mode(wsize)
	pygame.display.set_caption('sampleviz')
	screen.fill(background_colour)
	pygame.display.flip()
	running = True
	scale = 300
	centerscale = scale
	pos = (0.5, 0.5)
	while running:
		sample = 0
		while(sample < len(samples)):
			samplepoint2_draw(screen, samples[sample], pos, scale, wsize)
			sample = sample + 1

		pxpos = (pos[0] * wsize[0], pos[1] * wsize[1])
		pygame.draw.line(screen, (100, 100, 110), pxpos, (pxpos[0] + centerscale, 	pxpos[1]))
		pygame.draw.line(screen, (100, 100, 110), pxpos, (pxpos[0] - centerscale, 	pxpos[1]))
		pygame.draw.line(screen, (100, 100, 110), pxpos, (pxpos[0], 				pxpos[1] + centerscale))
		pygame.draw.line(screen, (100, 100, 110), pxpos, (pxpos[0], 				pxpos[1] - centerscale))

		pygame.display.update()
		for event in pygame.event.get():
			if event.type == pygame.QUIT:
				running = False

def main():
	testsamples = spg.samplepattern_spiral(128, 0.5, 0.996)
	samplepoint2_arr_draw(testsamples)


if __name__ == "__main__":
	main()



#========================================================================
# LICENSE: Public Domain
#========================================================================
# This is free and unencumbered software released into the public domain.
# 
# Anyone is free to copy, modify, publish, use, compile, sell, or
# distribute this software, either in source code form or as a compiled
# binary, for any purpose, commercial or non-commercial, and by any
# means.
# 
# In jurisdictions that recognize copyright laws, the author or authors
# of this software dedicate any and all copyright interest in the
# software to the public domain. We make this dedication for the benefit
# of the public at large and to the detriment of our heirs and
# successors. We intend this dedication to be an overt act of
# relinquishment in perpetuity of all present and future rights to this
# software under copyright law.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
# 
# For more information, please refer to <http://unlicense.org/>
#========================================================================
